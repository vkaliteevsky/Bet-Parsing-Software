                                        GUI
Фильтры:
1. Букмекеры обязательные (галочки). Галочкой будут отмечены те букмекеры, которые обязательно должны участвовать в вилке.
2. Букмекеры общий список (галочки). Галочкой будут отмечены те букмекера, которые в принципе могут учатсвовать в вилках (например, может сложиться ситуация, что на каких-то букмекерах у нас в данный момент просто нет денег. В этом случае, мы хотим выкинуть этих букмекеров из общего списка найденных вилок)
3. Вилки с возвратом (галочка). Бывает так, что от некоторых вилок можно выйти в нулевую доходность. Если галочка поставлена, такие вилки печатаются на экран, иначе не печатаются.
4. Разные букмекеры (галочка). Если галочка установлена, печатаем только те вилки, у которых все букмекеры различны.
5. Количество исходов (галочки; всего два варианта: либо 4, либо 5).
6. Фильтрация по времени начала матча. 3 числа: кол-во дней, кол-во часов, кол-во минут. Смысл фильтра: отобразить на экране все вилки, которые начнуюся не позднее x дней, y часов, z минут.

Управление:
1. Обновить info (кнопка). Обращается к dispetcher за новой дозой вилок. При этом старый файл info удаляется (перезаписывается).
2. Отфильтровать вилки (кнопка). Фильтрует хранящиеся в памяти вилки в соответствии с набором фильтров. Содержимое файла info никак не изменяется и из него ничего не читают.
3. Прочитать info (кнопка). Удаляет из памяти все прочитанные вилки, читает весь файл инфо, запоминает его в память, фильтрует и печатает на экран.
4. Очистить mem-файл (кнопка).
5. Инициализировать парсеры (кнопка + 4 галочки). Отправляет команду диспетчеру заново инициализировать те парсеры, которые были отмечены одной из четырех галочек).
6. Количество матчей в одном запросе к диспетчеру (число).
7. Главный парсер (перключатель между 4-мя парсерами (букмекерами))
8. Упорядочение по доходности. На самом деле, у нас как таковой доходности нет, у нас есть вектор доходностей, состоящий из произвольного количества элементов (может быть, даже 10 элементов). Поэтому упорядочивать будем по некоторому агрегированному значению доходности (т.е. по значению некоторой функции от вектора доходностей). На каждую функцию необходимо иметь по галочке. Список функций, который нужно реализовать:
    8.1. Средняя доходность (это просто среднее арифметическое доходностей)
    8.2. Дисперсия доходностей (это выборочная дисперсия всех доходностей, http://ru.wikipedia.org/wiki/%D0%92%D1%8B%D0%B1%D0%BE%D1%80%D0%BE%D1%87%D0%BD%D0%B0%D1%8F_%D0%B4%D0%B8%D1%81%D0%BF%D0%B5%D1%80%D1%81%D0%B8%D1%8F)
    8.3. Средневзвешенная доходность. Она самая адекватная, но ее реализация трудна и пока что я предлагаю на нее забить.
    8.4. Минимальная доходность

Описание области печати иформации (там, где печатается информация о найденных вилках)
Структурно картинка должна быть точно такой же, как на https://www.allbestbets.ru/surebets
1. Вилки печатаются блоками, друг под другом.
2. Каждый блок должен содержать 3 элемента:
    2.1. Таблица с информацией о вилке. Она должна выглядеть так:
                datetime    cmd1    cmd2    Вид_события     Коэффициент
    Букмекер_1    ...       ...     ...         ...             ...
    Букмекер_2    ...       ...     ...         ...             ...
       ...
    Букмекер_n    ...       ...     ...         ...             ...
    Где n = 4,5.
    2.2. Доходность вилки (это просто число в процентах)
    2.3. Кнопка, по нажатии на которую открывается калькулятор В ОТДЕЛЬНОМ ПРИЛОЖЕНИИ.
3. Область с ифнормацией должна скролиться. Я бы написал отдельный класс Representation, предназначенный для вывода на печать. Это будет полезно, чтобы вид печати можно было инкапсулированно изменять.