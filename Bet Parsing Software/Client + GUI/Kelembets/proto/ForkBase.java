// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Fork.proto

package client.proto;

public final class ForkBase {
  private ForkBase() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ForkOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Fork)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 date = 1;</code>
     */
    boolean hasDate();
    /**
     * <code>required int64 date = 1;</code>
     */
    long getDate();

    /**
     * <code>required string firstTeam = 2;</code>
     */
    boolean hasFirstTeam();
    /**
     * <code>required string firstTeam = 2;</code>
     */
    java.lang.String getFirstTeam();
    /**
     * <code>required string firstTeam = 2;</code>
     */
    com.google.protobuf.ByteString
        getFirstTeamBytes();

    /**
     * <code>required string secondTeam = 3;</code>
     */
    boolean hasSecondTeam();
    /**
     * <code>required string secondTeam = 3;</code>
     */
    java.lang.String getSecondTeam();
    /**
     * <code>required string secondTeam = 3;</code>
     */
    com.google.protobuf.ByteString
        getSecondTeamBytes();

    /**
     * <code>repeated int32 events = 4;</code>
     */
    java.util.List<java.lang.Integer> getEventsList();
    /**
     * <code>repeated int32 events = 4;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated int32 events = 4;</code>
     */
    int getEvents(int index);

    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    java.util.List<java.lang.Integer> getBookmakersList();
    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    int getBookmakersCount();
    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    int getBookmakers(int index);

    /**
     * <code>optional int32 outcomes = 6;</code>
     */
    boolean hasOutcomes();
    /**
     * <code>optional int32 outcomes = 6;</code>
     */
    int getOutcomes();

    /**
     * <code>repeated double odds = 7;</code>
     */
    java.util.List<java.lang.Double> getOddsList();
    /**
     * <code>repeated double odds = 7;</code>
     */
    int getOddsCount();
    /**
     * <code>repeated double odds = 7;</code>
     */
    double getOdds(int index);

    /**
     * <code>repeated double yields = 8;</code>
     */
    java.util.List<java.lang.Double> getYieldsList();
    /**
     * <code>repeated double yields = 8;</code>
     */
    int getYieldsCount();
    /**
     * <code>repeated double yields = 8;</code>
     */
    double getYields(int index);
  }
  /**
   * Protobuf type {@code Fork}
   */
  public static final class Fork extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Fork)
      ForkOrBuilder {
    // Use Fork.newBuilder() to construct.
    private Fork(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Fork(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Fork defaultInstance;
    public static Fork getDefaultInstance() {
      return defaultInstance;
    }

    public Fork getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Fork(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              date_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              firstTeam_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              secondTeam_ = bs;
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                events_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              events_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                events_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                events_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                bookmakers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              bookmakers_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                bookmakers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                bookmakers_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              outcomes_ = input.readInt32();
              break;
            }
            case 57: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                odds_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000040;
              }
              odds_.add(input.readDouble());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                odds_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                odds_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 65: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                yields_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000080;
              }
              yields_.add(input.readDouble());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                yields_ = new java.util.ArrayList<java.lang.Double>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                yields_.add(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          bookmakers_ = java.util.Collections.unmodifiableList(bookmakers_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          odds_ = java.util.Collections.unmodifiableList(odds_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          yields_ = java.util.Collections.unmodifiableList(yields_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return client.proto.ForkBase.internal_static_Fork_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return client.proto.ForkBase.internal_static_Fork_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              client.proto.ForkBase.Fork.class, client.proto.ForkBase.Fork.Builder.class);
    }

    public static com.google.protobuf.Parser<Fork> PARSER =
        new com.google.protobuf.AbstractParser<Fork>() {
      public Fork parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Fork(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Fork> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int DATE_FIELD_NUMBER = 1;
    private long date_;
    /**
     * <code>required int64 date = 1;</code>
     */
    public boolean hasDate() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 date = 1;</code>
     */
    public long getDate() {
      return date_;
    }

    public static final int FIRSTTEAM_FIELD_NUMBER = 2;
    private java.lang.Object firstTeam_;
    /**
     * <code>required string firstTeam = 2;</code>
     */
    public boolean hasFirstTeam() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string firstTeam = 2;</code>
     */
    public java.lang.String getFirstTeam() {
      java.lang.Object ref = firstTeam_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          firstTeam_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string firstTeam = 2;</code>
     */
    public com.google.protobuf.ByteString
        getFirstTeamBytes() {
      java.lang.Object ref = firstTeam_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        firstTeam_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SECONDTEAM_FIELD_NUMBER = 3;
    private java.lang.Object secondTeam_;
    /**
     * <code>required string secondTeam = 3;</code>
     */
    public boolean hasSecondTeam() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required string secondTeam = 3;</code>
     */
    public java.lang.String getSecondTeam() {
      java.lang.Object ref = secondTeam_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          secondTeam_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string secondTeam = 3;</code>
     */
    public com.google.protobuf.ByteString
        getSecondTeamBytes() {
      java.lang.Object ref = secondTeam_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        secondTeam_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EVENTS_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> events_;
    /**
     * <code>repeated int32 events = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getEventsList() {
      return events_;
    }
    /**
     * <code>repeated int32 events = 4;</code>
     */
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated int32 events = 4;</code>
     */
    public int getEvents(int index) {
      return events_.get(index);
    }

    public static final int BOOKMAKERS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> bookmakers_;
    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    public java.util.List<java.lang.Integer>
        getBookmakersList() {
      return bookmakers_;
    }
    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    public int getBookmakersCount() {
      return bookmakers_.size();
    }
    /**
     * <code>repeated int32 bookmakers = 5;</code>
     */
    public int getBookmakers(int index) {
      return bookmakers_.get(index);
    }

    public static final int OUTCOMES_FIELD_NUMBER = 6;
    private int outcomes_;
    /**
     * <code>optional int32 outcomes = 6;</code>
     */
    public boolean hasOutcomes() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 outcomes = 6;</code>
     */
    public int getOutcomes() {
      return outcomes_;
    }

    public static final int ODDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Double> odds_;
    /**
     * <code>repeated double odds = 7;</code>
     */
    public java.util.List<java.lang.Double>
        getOddsList() {
      return odds_;
    }
    /**
     * <code>repeated double odds = 7;</code>
     */
    public int getOddsCount() {
      return odds_.size();
    }
    /**
     * <code>repeated double odds = 7;</code>
     */
    public double getOdds(int index) {
      return odds_.get(index);
    }

    public static final int YIELDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Double> yields_;
    /**
     * <code>repeated double yields = 8;</code>
     */
    public java.util.List<java.lang.Double>
        getYieldsList() {
      return yields_;
    }
    /**
     * <code>repeated double yields = 8;</code>
     */
    public int getYieldsCount() {
      return yields_.size();
    }
    /**
     * <code>repeated double yields = 8;</code>
     */
    public double getYields(int index) {
      return yields_.get(index);
    }

    private void initFields() {
      date_ = 0L;
      firstTeam_ = "";
      secondTeam_ = "";
      events_ = java.util.Collections.emptyList();
      bookmakers_ = java.util.Collections.emptyList();
      outcomes_ = 0;
      odds_ = java.util.Collections.emptyList();
      yields_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDate()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFirstTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSecondTeam()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, date_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getFirstTeamBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getSecondTeamBytes());
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeInt32(4, events_.get(i));
      }
      for (int i = 0; i < bookmakers_.size(); i++) {
        output.writeInt32(5, bookmakers_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, outcomes_);
      }
      for (int i = 0; i < odds_.size(); i++) {
        output.writeDouble(7, odds_.get(i));
      }
      for (int i = 0; i < yields_.size(); i++) {
        output.writeDouble(8, yields_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, date_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getFirstTeamBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getSecondTeamBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < events_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(events_.get(i));
        }
        size += dataSize;
        size += 1 * getEventsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bookmakers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bookmakers_.get(i));
        }
        size += dataSize;
        size += 1 * getBookmakersList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, outcomes_);
      }
      {
        int dataSize = 0;
        dataSize = 8 * getOddsList().size();
        size += dataSize;
        size += 1 * getOddsList().size();
      }
      {
        int dataSize = 0;
        dataSize = 8 * getYieldsList().size();
        size += dataSize;
        size += 1 * getYieldsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static client.proto.ForkBase.Fork parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static client.proto.ForkBase.Fork parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static client.proto.ForkBase.Fork parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static client.proto.ForkBase.Fork parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static client.proto.ForkBase.Fork parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static client.proto.ForkBase.Fork parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static client.proto.ForkBase.Fork parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static client.proto.ForkBase.Fork parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static client.proto.ForkBase.Fork parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static client.proto.ForkBase.Fork parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(client.proto.ForkBase.Fork prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Fork}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Fork)
        client.proto.ForkBase.ForkOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return client.proto.ForkBase.internal_static_Fork_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return client.proto.ForkBase.internal_static_Fork_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                client.proto.ForkBase.Fork.class, client.proto.ForkBase.Fork.Builder.class);
      }

      // Construct using client.proto.ForkBase.Fork.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        date_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        firstTeam_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        secondTeam_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        bookmakers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        outcomes_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        odds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        yields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return client.proto.ForkBase.internal_static_Fork_descriptor;
      }

      public client.proto.ForkBase.Fork getDefaultInstanceForType() {
        return client.proto.ForkBase.Fork.getDefaultInstance();
      }

      public client.proto.ForkBase.Fork build() {
        client.proto.ForkBase.Fork result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public client.proto.ForkBase.Fork buildPartial() {
        client.proto.ForkBase.Fork result = new client.proto.ForkBase.Fork(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.date_ = date_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.firstTeam_ = firstTeam_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.secondTeam_ = secondTeam_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          events_ = java.util.Collections.unmodifiableList(events_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.events_ = events_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          bookmakers_ = java.util.Collections.unmodifiableList(bookmakers_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.bookmakers_ = bookmakers_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.outcomes_ = outcomes_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          odds_ = java.util.Collections.unmodifiableList(odds_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.odds_ = odds_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          yields_ = java.util.Collections.unmodifiableList(yields_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.yields_ = yields_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof client.proto.ForkBase.Fork) {
          return mergeFrom((client.proto.ForkBase.Fork)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(client.proto.ForkBase.Fork other) {
        if (other == client.proto.ForkBase.Fork.getDefaultInstance()) return this;
        if (other.hasDate()) {
          setDate(other.getDate());
        }
        if (other.hasFirstTeam()) {
          bitField0_ |= 0x00000002;
          firstTeam_ = other.firstTeam_;
          onChanged();
        }
        if (other.hasSecondTeam()) {
          bitField0_ |= 0x00000004;
          secondTeam_ = other.secondTeam_;
          onChanged();
        }
        if (!other.events_.isEmpty()) {
          if (events_.isEmpty()) {
            events_ = other.events_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureEventsIsMutable();
            events_.addAll(other.events_);
          }
          onChanged();
        }
        if (!other.bookmakers_.isEmpty()) {
          if (bookmakers_.isEmpty()) {
            bookmakers_ = other.bookmakers_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureBookmakersIsMutable();
            bookmakers_.addAll(other.bookmakers_);
          }
          onChanged();
        }
        if (other.hasOutcomes()) {
          setOutcomes(other.getOutcomes());
        }
        if (!other.odds_.isEmpty()) {
          if (odds_.isEmpty()) {
            odds_ = other.odds_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureOddsIsMutable();
            odds_.addAll(other.odds_);
          }
          onChanged();
        }
        if (!other.yields_.isEmpty()) {
          if (yields_.isEmpty()) {
            yields_ = other.yields_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureYieldsIsMutable();
            yields_.addAll(other.yields_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasDate()) {
          
          return false;
        }
        if (!hasFirstTeam()) {
          
          return false;
        }
        if (!hasSecondTeam()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        client.proto.ForkBase.Fork parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (client.proto.ForkBase.Fork) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long date_ ;
      /**
       * <code>required int64 date = 1;</code>
       */
      public boolean hasDate() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 date = 1;</code>
       */
      public long getDate() {
        return date_;
      }
      /**
       * <code>required int64 date = 1;</code>
       */
      public Builder setDate(long value) {
        bitField0_ |= 0x00000001;
        date_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 date = 1;</code>
       */
      public Builder clearDate() {
        bitField0_ = (bitField0_ & ~0x00000001);
        date_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object firstTeam_ = "";
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public boolean hasFirstTeam() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public java.lang.String getFirstTeam() {
        java.lang.Object ref = firstTeam_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            firstTeam_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public com.google.protobuf.ByteString
          getFirstTeamBytes() {
        java.lang.Object ref = firstTeam_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          firstTeam_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public Builder setFirstTeam(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        firstTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public Builder clearFirstTeam() {
        bitField0_ = (bitField0_ & ~0x00000002);
        firstTeam_ = getDefaultInstance().getFirstTeam();
        onChanged();
        return this;
      }
      /**
       * <code>required string firstTeam = 2;</code>
       */
      public Builder setFirstTeamBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        firstTeam_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object secondTeam_ = "";
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public boolean hasSecondTeam() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public java.lang.String getSecondTeam() {
        java.lang.Object ref = secondTeam_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            secondTeam_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public com.google.protobuf.ByteString
          getSecondTeamBytes() {
        java.lang.Object ref = secondTeam_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          secondTeam_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public Builder setSecondTeam(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        secondTeam_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public Builder clearSecondTeam() {
        bitField0_ = (bitField0_ & ~0x00000004);
        secondTeam_ = getDefaultInstance().getSecondTeam();
        onChanged();
        return this;
      }
      /**
       * <code>required string secondTeam = 3;</code>
       */
      public Builder setSecondTeamBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        secondTeam_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> events_ = java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          events_ = new java.util.ArrayList<java.lang.Integer>(events_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getEventsList() {
        return java.util.Collections.unmodifiableList(events_);
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public int getEventsCount() {
        return events_.size();
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public int getEvents(int index) {
        return events_.get(index);
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public Builder setEvents(
          int index, int value) {
        ensureEventsIsMutable();
        events_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public Builder addEvents(int value) {
        ensureEventsIsMutable();
        events_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureEventsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, events_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 events = 4;</code>
       */
      public Builder clearEvents() {
        events_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> bookmakers_ = java.util.Collections.emptyList();
      private void ensureBookmakersIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          bookmakers_ = new java.util.ArrayList<java.lang.Integer>(bookmakers_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public java.util.List<java.lang.Integer>
          getBookmakersList() {
        return java.util.Collections.unmodifiableList(bookmakers_);
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public int getBookmakersCount() {
        return bookmakers_.size();
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public int getBookmakers(int index) {
        return bookmakers_.get(index);
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public Builder setBookmakers(
          int index, int value) {
        ensureBookmakersIsMutable();
        bookmakers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public Builder addBookmakers(int value) {
        ensureBookmakersIsMutable();
        bookmakers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public Builder addAllBookmakers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBookmakersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, bookmakers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bookmakers = 5;</code>
       */
      public Builder clearBookmakers() {
        bookmakers_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private int outcomes_ ;
      /**
       * <code>optional int32 outcomes = 6;</code>
       */
      public boolean hasOutcomes() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 outcomes = 6;</code>
       */
      public int getOutcomes() {
        return outcomes_;
      }
      /**
       * <code>optional int32 outcomes = 6;</code>
       */
      public Builder setOutcomes(int value) {
        bitField0_ |= 0x00000020;
        outcomes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 outcomes = 6;</code>
       */
      public Builder clearOutcomes() {
        bitField0_ = (bitField0_ & ~0x00000020);
        outcomes_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> odds_ = java.util.Collections.emptyList();
      private void ensureOddsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          odds_ = new java.util.ArrayList<java.lang.Double>(odds_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public java.util.List<java.lang.Double>
          getOddsList() {
        return java.util.Collections.unmodifiableList(odds_);
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public int getOddsCount() {
        return odds_.size();
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public double getOdds(int index) {
        return odds_.get(index);
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public Builder setOdds(
          int index, double value) {
        ensureOddsIsMutable();
        odds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public Builder addOdds(double value) {
        ensureOddsIsMutable();
        odds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public Builder addAllOdds(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureOddsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, odds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double odds = 7;</code>
       */
      public Builder clearOdds() {
        odds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Double> yields_ = java.util.Collections.emptyList();
      private void ensureYieldsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          yields_ = new java.util.ArrayList<java.lang.Double>(yields_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public java.util.List<java.lang.Double>
          getYieldsList() {
        return java.util.Collections.unmodifiableList(yields_);
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public int getYieldsCount() {
        return yields_.size();
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public double getYields(int index) {
        return yields_.get(index);
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public Builder setYields(
          int index, double value) {
        ensureYieldsIsMutable();
        yields_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public Builder addYields(double value) {
        ensureYieldsIsMutable();
        yields_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public Builder addAllYields(
          java.lang.Iterable<? extends java.lang.Double> values) {
        ensureYieldsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, yields_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated double yields = 8;</code>
       */
      public Builder clearYields() {
        yields_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Fork)
    }

    static {
      defaultInstance = new Fork(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Fork)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Fork_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Fork_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nFork.proto\"\217\001\n\004Fork\022\014\n\004date\030\001 \002(\003\022\021\n\tf" +
      "irstTeam\030\002 \002(\t\022\022\n\nsecondTeam\030\003 \002(\t\022\016\n\006ev" +
      "ents\030\004 \003(\005\022\022\n\nbookmakers\030\005 \003(\005\022\020\n\010outcom" +
      "es\030\006 \001(\005\022\014\n\004odds\030\007 \003(\001\022\016\n\006yields\030\010 \003(\001B\030" +
      "\n\014client.protoB\010ForkBase"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Fork_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Fork_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Fork_descriptor,
        new java.lang.String[] { "Date", "FirstTeam", "SecondTeam", "Events", "Bookmakers", "Outcomes", "Odds", "Yields", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
